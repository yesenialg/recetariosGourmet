// <auto-generated />
using Gourmet.ContextDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gourmet.Migrations
{
    [DbContext(typeof(DBRecetariosContext))]
    partial class DBRecetariosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("Gourmet.Ingredientes.Ingrediente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Calorias")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Unidad")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Ingredientes", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("Ingrediente");
                });

            modelBuilder.Entity("Gourmet.IngredientesReceta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("CantidadIngrediente")
                        .HasColumnType("REAL");

                    b.Property<long>("IdIngrediente")
                        .HasColumnType("INTEGER");

                    b.Property<long>("IdReceta")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdIngrediente");

                    b.HasIndex("IdReceta");

                    b.ToTable("IngredientesReceta");
                });

            modelBuilder.Entity("Gourmet.Receta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Recetas");
                });

            modelBuilder.Entity("Gourmet.Recetario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Recetarios", (string)null);
                });

            modelBuilder.Entity("Gourmet.RecetasRecetario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("IdReceta")
                        .HasColumnType("INTEGER");

                    b.Property<long>("IdRecetario")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdReceta");

                    b.HasIndex("IdRecetario");

                    b.ToTable("RecetasRecetario", (string)null);
                });

            modelBuilder.Entity("Gourmet.Ingredientes.IngredienteCuantitativo", b =>
                {
                    b.HasBaseType("Gourmet.Ingredientes.Ingrediente");

                    b.HasDiscriminator().HasValue("IngredienteCuantitativo");
                });

            modelBuilder.Entity("Gourmet.IngredientesReceta", b =>
                {
                    b.HasOne("Gourmet.Ingredientes.IngredienteCuantitativo", "IdIngredienteNavigation")
                        .WithMany("IngredientesReceta")
                        .HasForeignKey("IdIngrediente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gourmet.Receta", "IdRecetaNavigation")
                        .WithMany("IngredientesReceta")
                        .HasForeignKey("IdReceta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdIngredienteNavigation");

                    b.Navigation("IdRecetaNavigation");
                });

            modelBuilder.Entity("Gourmet.RecetasRecetario", b =>
                {
                    b.HasOne("Gourmet.Receta", "IdRecetaNavigation")
                        .WithMany("RecetasRecetario")
                        .HasForeignKey("IdReceta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gourmet.Recetario", "IdRecetarioNavigation")
                        .WithMany("RecetasRecetarios")
                        .HasForeignKey("IdRecetario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdRecetaNavigation");

                    b.Navigation("IdRecetarioNavigation");
                });

            modelBuilder.Entity("Gourmet.Receta", b =>
                {
                    b.Navigation("IngredientesReceta");

                    b.Navigation("RecetasRecetario");
                });

            modelBuilder.Entity("Gourmet.Recetario", b =>
                {
                    b.Navigation("RecetasRecetarios");
                });

            modelBuilder.Entity("Gourmet.Ingredientes.IngredienteCuantitativo", b =>
                {
                    b.Navigation("IngredientesReceta");
                });
#pragma warning restore 612, 618
        }
    }
}
